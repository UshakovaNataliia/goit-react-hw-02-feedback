{"version":3,"sources":["components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackButtons/FeedbackButtons.js","components/Section/Section.js","components/App.jsx","index.js"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Button","styled","button","FeedbackButtons","options","onLeaveFeedback","keys","Object","map","key","onClick","charAt","toUpperCase","slice","Section","title","children","App","state","changeStatistics","setState","prev","this","countTotalFeedback","toFixed","countPositiveFeedbackPercentage","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOASeA,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,mBAAGA,QAASA,EAAZ,SAAsBA,KCmBlBC,EAnBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OAAc,IAAVD,EAAoB,cAAC,EAAD,CAAcL,QAAQ,sBAE1C,qCACI,uCAAUE,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,Y,4PCRZ,IAAMC,E,MAASC,EAAOC,OAAV,KAkCGC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAOC,OAAOD,KAAKF,GAEzB,OACE,mCACGE,EAAKE,KAAI,SAAAC,GAAG,OACX,cAACT,EAAD,CAAkBU,QAAS,kBAAML,EAAgBI,IAAjD,SACGA,EAAIE,OAAO,GAAGC,cAAgBH,EAAII,MAAM,IAD9BJ,SCNNK,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACA,6BAAKD,IACJC,MC4CMC,E,4MA7CbC,MAAQ,CACJvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETsB,iBAAmB,SAAAjB,GACjB,EAAKkB,UAAS,SAAAC,GACZ,OAAO,eAAGnB,EAASmB,EAAKnB,GAAU,O,mEAGhB,IAAD,EACcoB,KAAKJ,MACpC,OAFiB,EACTvB,KADS,EACHC,QADG,EACMC,M,wDAIvB,QAA2B,IAAhByB,KAAKJ,MAAMvB,KAAU2B,KAAKC,sBAAsBC,QAAQ,K,+BAE7D,IAAD,EACwBF,KAAKJ,MAA5BvB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACC,qCACE,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASkB,KAAKJ,MACdb,gBAAiBiB,KAAKH,qBAG1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACE,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKC,qBACZxB,mBACEuB,KAAKG,kCAAoC,EACrCH,KAAKG,kCACL,a,GArCCC,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f9d00d0b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return <p message={message}>{message}</p>\r\n};\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    if (total === 0) return <Notification message=\"No feedback given\" />;\r\n    return (\r\n        <>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage} %</p>\r\n        </>\r\n    )\r\n};\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    width: 100px;\r\n    margin-left: 10px;\r\n    background-color: #fff;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    &:hover{\r\n        background-color: #99ffff;\r\n    }\r\n`;\r\n\r\nconst FeedbackButtons = ({ options, onLeaveFeedback }) => {\r\n  const keys = Object.keys(options);\r\n\r\n  return (\r\n    <>\r\n      {keys.map(key => (\r\n        <Button key={key} onClick={() => onLeaveFeedback(key)}>\r\n          {key.charAt(0).toUpperCase() + key.slice(1)}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackButtons.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackButtons;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n)\r\n};\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.object,\r\n};\r\nexport default Section;","import React from 'react';\r\nimport Statistics from './Statistics/Statistics';\r\nimport FeedbackButtons from './FeedbackButtons/FeedbackButtons';\r\nimport Section from './Section/Section';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n      good: 0,\r\n      neutral: 0,\r\n      bad: 0\r\n    };\r\n  changeStatistics = button => {\r\n    this.setState(prev => {\r\n      return { [button]: prev[button] + 1 };\r\n    });\r\n  };\r\n  countTotalFeedback() {\r\n      const { good, neutral, bad } = this.state;\r\n      return good + neutral + bad;\r\n  }\r\n  countPositiveFeedbackPercentage() {\r\n      return (+((this.state.good*100)/this.countTotalFeedback()).toFixed(2));\r\n  }\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n     <>\r\n       <Section title=\"Please leave feedback\">\r\n         <FeedbackButtons\r\n           options={this.state}\r\n           onLeaveFeedback={this.changeStatistics}\r\n         />\r\n       </Section>  \r\n       <Section title=\"Statistics\">\r\n         <Statistics\r\n           good={good}\r\n           neutral={neutral}\r\n           bad={bad}\r\n           total={this.countTotalFeedback()}\r\n           positivePercentage={\r\n             this.countPositiveFeedbackPercentage() > 0\r\n               ? this.countPositiveFeedbackPercentage()\r\n               : 0\r\n           }\r\n         />\r\n       </Section>\r\n     </>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}